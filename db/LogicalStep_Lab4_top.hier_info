|LogicalStep_Lab4_top
clkin_50 => segment7_mux:INST3.clk
clkin_50 => bin_counter[0].CLK
clkin_50 => bin_counter[1].CLK
clkin_50 => bin_counter[2].CLK
clkin_50 => bin_counter[3].CLK
clkin_50 => bin_counter[4].CLK
clkin_50 => bin_counter[5].CLK
clkin_50 => bin_counter[6].CLK
clkin_50 => bin_counter[7].CLK
clkin_50 => bin_counter[8].CLK
clkin_50 => bin_counter[9].CLK
clkin_50 => bin_counter[10].CLK
clkin_50 => bin_counter[11].CLK
clkin_50 => bin_counter[12].CLK
clkin_50 => bin_counter[13].CLK
clkin_50 => bin_counter[14].CLK
clkin_50 => bin_counter[15].CLK
clkin_50 => bin_counter[16].CLK
clkin_50 => bin_counter[17].CLK
clkin_50 => bin_counter[18].CLK
clkin_50 => bin_counter[19].CLK
clkin_50 => bin_counter[20].CLK
clkin_50 => bin_counter[21].CLK
clkin_50 => bin_counter[22].CLK
clkin_50 => bin_counter[23].CLK
clkin_50 => bin_counter[24].CLK
clkin_50 => bin_counter[25].CLK
rst_n => FlashCounter:INST19FLASH.rst_n
rst_n => Bin_Counter4bit:INST4X.rst_n
rst_n => Bin_Counter4bit:INST5Y.rst_n
rst_n => Grappler:INST8GrapplerSM.rst_n
rst_n => Bidir_shift_reg:INST9.RESET_n
rst_n => Extender:INST10.rst_n
rst_n => MealyStatemachine:INSTMEALY.resetButton
pb[0] => Grappler:INST8GrapplerSM.controlButton
pb[1] => Extender:INST10.controlButton
pb[2] => mux:INST14MUX_Y.mux_select
pb[2] => MealyStatemachine:INSTMEALY.Y_MOTION
pb[3] => mux:INST13MUX_X.mux_select
pb[3] => MealyStatemachine:INSTMEALY.X_MOTION
sw[0] => SevenSegment:INST2YTARGET.hex[0]
sw[0] => FourBitComparator:INST7Y.bitA0
sw[1] => SevenSegment:INST2YTARGET.hex[1]
sw[1] => FourBitComparator:INST7Y.bitA1
sw[2] => SevenSegment:INST2YTARGET.hex[2]
sw[2] => FourBitComparator:INST7Y.bitA2
sw[3] => SevenSegment:INST2YTARGET.hex[3]
sw[3] => FourBitComparator:INST7Y.bitA3
sw[4] => SevenSegment:INST1XTARGET.hex[0]
sw[4] => FourBitComparator:INST6X.bitA0
sw[5] => SevenSegment:INST1XTARGET.hex[1]
sw[5] => FourBitComparator:INST6X.bitA1
sw[6] => SevenSegment:INST1XTARGET.hex[2]
sw[6] => FourBitComparator:INST6X.bitA2
sw[7] => SevenSegment:INST1XTARGET.hex[3]
sw[7] => FourBitComparator:INST6X.bitA3
leds[0] << MealyStatemachine:INSTMEALY.isError
leds[1] << <GND>
leds[2] << <GND>
leds[3] << Grappler:INST8GrapplerSM.grappleControl
leds[4] << Bidir_shift_reg:INST9.REG_BITS[0]
leds[5] << Bidir_shift_reg:INST9.REG_BITS[1]
leds[6] << Bidir_shift_reg:INST9.REG_BITS[2]
leds[7] << Bidir_shift_reg:INST9.REG_BITS[3]
seg7_data[0] << segment7_mux:INST3.DOUT[0]
seg7_data[1] << segment7_mux:INST3.DOUT[1]
seg7_data[2] << segment7_mux:INST3.DOUT[2]
seg7_data[3] << segment7_mux:INST3.DOUT[3]
seg7_data[4] << segment7_mux:INST3.DOUT[4]
seg7_data[5] << segment7_mux:INST3.DOUT[5]
seg7_data[6] << segment7_mux:INST3.DOUT[6]
seg7_char1 << segment7_mux:INST3.DIG2
seg7_char2 << segment7_mux:INST3.DIG1


|LogicalStep_Lab4_top|SevenSegment:INST1XTARGET
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:INST2YTARGET
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:INST11XCURRENT
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:INST12YCURRENT
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|mux:INST13MUX_X
hex_in1[0] => hex_out.DATAB
hex_in1[1] => hex_out.DATAB
hex_in1[2] => hex_out.DATAB
hex_in1[3] => hex_out.DATAB
hex_in1[4] => hex_out.DATAB
hex_in1[5] => hex_out.DATAB
hex_in1[6] => hex_out.DATAB
hex_in2[0] => hex_out.DATAA
hex_in2[1] => hex_out.DATAA
hex_in2[2] => hex_out.DATAA
hex_in2[3] => hex_out.DATAA
hex_in2[4] => hex_out.DATAA
hex_in2[5] => hex_out.DATAA
hex_in2[6] => hex_out.DATAA
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
hex_out[0] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[4] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[5] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[6] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|mux:INST14MUX_Y
hex_in1[0] => hex_out.DATAB
hex_in1[1] => hex_out.DATAB
hex_in1[2] => hex_out.DATAB
hex_in1[3] => hex_out.DATAB
hex_in1[4] => hex_out.DATAB
hex_in1[5] => hex_out.DATAB
hex_in1[6] => hex_out.DATAB
hex_in2[0] => hex_out.DATAA
hex_in2[1] => hex_out.DATAA
hex_in2[2] => hex_out.DATAA
hex_in2[3] => hex_out.DATAA
hex_in2[4] => hex_out.DATAA
hex_in2[5] => hex_out.DATAA
hex_in2[6] => hex_out.DATAA
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
hex_out[0] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[4] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[5] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[6] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|mux:INST15X_MUX_ERROR
hex_in1[0] => hex_out.DATAB
hex_in1[1] => hex_out.DATAB
hex_in1[2] => hex_out.DATAB
hex_in1[3] => hex_out.DATAB
hex_in1[4] => hex_out.DATAB
hex_in1[5] => hex_out.DATAB
hex_in1[6] => hex_out.DATAB
hex_in2[0] => hex_out.DATAA
hex_in2[1] => hex_out.DATAA
hex_in2[2] => hex_out.DATAA
hex_in2[3] => hex_out.DATAA
hex_in2[4] => hex_out.DATAA
hex_in2[5] => hex_out.DATAA
hex_in2[6] => hex_out.DATAA
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
hex_out[0] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[4] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[5] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[6] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|mux:INST16Y_MUX_ERROR
hex_in1[0] => hex_out.DATAB
hex_in1[1] => hex_out.DATAB
hex_in1[2] => hex_out.DATAB
hex_in1[3] => hex_out.DATAB
hex_in1[4] => hex_out.DATAB
hex_in1[5] => hex_out.DATAB
hex_in1[6] => hex_out.DATAB
hex_in2[0] => hex_out.DATAA
hex_in2[1] => hex_out.DATAA
hex_in2[2] => hex_out.DATAA
hex_in2[3] => hex_out.DATAA
hex_in2[4] => hex_out.DATAA
hex_in2[5] => hex_out.DATAA
hex_in2[6] => hex_out.DATAA
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
hex_out[0] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[4] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[5] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[6] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|mux:INST18ERROR_AND_NOTHING
hex_in1[0] => hex_out.DATAB
hex_in1[1] => hex_out.DATAB
hex_in1[2] => hex_out.DATAB
hex_in1[3] => hex_out.DATAB
hex_in1[4] => hex_out.DATAB
hex_in1[5] => hex_out.DATAB
hex_in1[6] => hex_out.DATAB
hex_in2[0] => hex_out.DATAA
hex_in2[1] => hex_out.DATAA
hex_in2[2] => hex_out.DATAA
hex_in2[3] => hex_out.DATAA
hex_in2[4] => hex_out.DATAA
hex_in2[5] => hex_out.DATAA
hex_in2[6] => hex_out.DATAA
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
mux_select => hex_out.OUTPUTSELECT
hex_out[0] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[4] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[5] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE
hex_out[6] <= hex_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FlashCounter:INST19FLASH
Main_clk => ud_bin_counter[0].CLK
rst_n => ud_bin_counter[0].ACLR
clk_en => process_0.IN0
clk_en => process_0.IN0
up1_down0 => process_0.IN1
up1_down0 => process_0.IN1
counter_bits[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|segment7_mux:INST3
clk => \clk_proc:COUNT[0].CLK
clk => \clk_proc:COUNT[1].CLK
clk => \clk_proc:COUNT[2].CLK
clk => \clk_proc:COUNT[3].CLK
clk => \clk_proc:COUNT[4].CLK
clk => \clk_proc:COUNT[5].CLK
clk => \clk_proc:COUNT[6].CLK
clk => \clk_proc:COUNT[7].CLK
clk => \clk_proc:COUNT[8].CLK
clk => \clk_proc:COUNT[9].CLK
clk => \clk_proc:COUNT[10].CLK
DIN2[0] => DOUT_TEMP.DATAB
DIN2[1] => DOUT_TEMP[1].DATAB
DIN2[2] => DOUT_TEMP.DATAB
DIN2[3] => DOUT_TEMP.DATAB
DIN2[4] => DOUT_TEMP.DATAB
DIN2[5] => DOUT_TEMP[5].DATAB
DIN2[6] => DOUT_TEMP[6].DATAB
DIN1[0] => DOUT_TEMP.DATAA
DIN1[1] => DOUT_TEMP[1].DATAA
DIN1[2] => DOUT_TEMP.DATAA
DIN1[3] => DOUT_TEMP.DATAA
DIN1[4] => DOUT_TEMP.DATAA
DIN1[5] => DOUT_TEMP[5].DATAA
DIN1[6] => DOUT_TEMP[6].DATAA
DOUT[0] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1].DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5].DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6].DB_MAX_OUTPUT_PORT_TYPE
DIG2 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE
DIG1 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bin_Counter4bit:INST4X
Main_clk => ud_bin_counter[0].CLK
Main_clk => ud_bin_counter[1].CLK
Main_clk => ud_bin_counter[2].CLK
Main_clk => ud_bin_counter[3].CLK
rst_n => ud_bin_counter[0].ACLR
rst_n => ud_bin_counter[1].ACLR
rst_n => ud_bin_counter[2].ACLR
rst_n => ud_bin_counter[3].ACLR
clk_en => process_0.IN0
clk_en => process_0.IN0
up1_down0 => process_0.IN1
up1_down0 => process_0.IN1
counter_bits[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bin_Counter4bit:INST5Y
Main_clk => ud_bin_counter[0].CLK
Main_clk => ud_bin_counter[1].CLK
Main_clk => ud_bin_counter[2].CLK
Main_clk => ud_bin_counter[3].CLK
rst_n => ud_bin_counter[0].ACLR
rst_n => ud_bin_counter[1].ACLR
rst_n => ud_bin_counter[2].ACLR
rst_n => ud_bin_counter[3].ACLR
clk_en => process_0.IN0
clk_en => process_0.IN0
up1_down0 => process_0.IN1
up1_down0 => process_0.IN1
counter_bits[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
counter_bits[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST6X
bitA0 => SingleBitComparator:INST1.bit1
bitA1 => SingleBitComparator:INST2.bit1
bitA2 => SingleBitComparator:INST3.bit1
bitA3 => SingleBitComparator:INST4.bit1
bitB0 => SingleBitComparator:INST1.bit2
bitB1 => SingleBitComparator:INST2.bit2
bitB2 => SingleBitComparator:INST3.bit2
bitB3 => SingleBitComparator:INST4.bit2
AGTB <= AGTB_signal.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB_signal.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST6X|SingleBitComparator:INST1
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST6X|SingleBitComparator:INST2
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST6X|SingleBitComparator:INST3
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST6X|SingleBitComparator:INST4
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST7Y
bitA0 => SingleBitComparator:INST1.bit1
bitA1 => SingleBitComparator:INST2.bit1
bitA2 => SingleBitComparator:INST3.bit1
bitA3 => SingleBitComparator:INST4.bit1
bitB0 => SingleBitComparator:INST1.bit2
bitB1 => SingleBitComparator:INST2.bit2
bitB2 => SingleBitComparator:INST3.bit2
bitB3 => SingleBitComparator:INST4.bit2
AGTB <= AGTB_signal.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB_signal.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST7Y|SingleBitComparator:INST1
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST7Y|SingleBitComparator:INST2
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST7Y|SingleBitComparator:INST3
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|FourBitComparator:INST7Y|SingleBitComparator:INST4
bit1 => gt.IN0
bit1 => et.IN0
bit1 => lt.IN0
bit2 => et.IN1
bit2 => lt.IN1
bit2 => gt.IN1
gt <= gt.DB_MAX_OUTPUT_PORT_TYPE
et <= et.DB_MAX_OUTPUT_PORT_TYPE
lt <= lt.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Grappler:INST8GrapplerSM
clk_input => current_state.CLK
rst_n => current_state.ACLR
controlButton => Transition_Section.IN0
controlButton => Transition_Section.IN0
enable => Transition_Section.IN1
enable => Transition_Section.IN1
grappleControl <= current_state.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bidir_shift_reg:INST9
CLK => sreg[0].CLK
CLK => sreg[1].CLK
CLK => sreg[2].CLK
CLK => sreg[3].CLK
RESET_n => sreg[0].ACLR
RESET_n => sreg[1].ACLR
RESET_n => sreg[2].ACLR
RESET_n => sreg[3].ACLR
CLK_EN => sreg[3].ENA
CLK_EN => sreg[2].ENA
CLK_EN => sreg[1].ENA
CLK_EN => sreg[0].ENA
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
REG_BITS[0] <= sreg[0].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[1] <= sreg[1].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[2] <= sreg[2].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[3] <= sreg[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Extender:INST10
clk_input => current_state~1.DATAIN
rst_n => current_state~3.DATAIN
controlButton => Transition_Section.IN0
enable => Transition_Section.IN1
currentShiftValue[0] => Equal0.IN3
currentShiftValue[0] => Equal1.IN2
currentShiftValue[0] => Equal2.IN0
currentShiftValue[0] => Equal3.IN3
currentShiftValue[1] => Equal0.IN2
currentShiftValue[1] => Equal1.IN1
currentShiftValue[1] => Equal2.IN3
currentShiftValue[1] => Equal3.IN2
currentShiftValue[2] => Equal0.IN1
currentShiftValue[2] => Equal1.IN0
currentShiftValue[2] => Equal2.IN2
currentShiftValue[2] => Equal3.IN1
currentShiftValue[3] => Equal0.IN0
currentShiftValue[3] => Equal1.IN3
currentShiftValue[3] => Equal2.IN1
currentShiftValue[3] => Equal3.IN0
bitShifting <= bitShifting.DB_MAX_OUTPUT_PORT_TYPE
extenderOut <= extenderOut.DB_MAX_OUTPUT_PORT_TYPE
bitShiftDirection <= bitShiftDirection$latch.DB_MAX_OUTPUT_PORT_TYPE
grapplerEnable <= grapplerEnable.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|MealyStatemachine:INSTMEALY
clk_input => current_state~1.DATAIN
resetButton => current_state~3.DATAIN
X_EQ => Transition_Section.IN0
X_EQ => Selector1.IN3
X_EQ => Decoder_Section.IN0
X_EQ => Transition_Section.IN0
X_EQ => Selector0.IN1
X_EQ => Transition_Section.IN0
X_EQ => Transition_Section.IN0
X_GT => X_Clk_en.OUTPUTSELECT
X_GT => X_UPorDOWN.IN0
X_GT => X_UPorDOWN$latch.DATAIN
X_LT => X_Clk_en.DATAA
X_LT => X_UPorDOWN.IN1
Y_EQ => Transition_Section.IN1
Y_EQ => Selector1.IN4
Y_EQ => Decoder_Section.IN1
Y_EQ => Transition_Section.IN1
Y_EQ => Transition_Section.IN1
Y_EQ => Selector2.IN1
Y_EQ => Transition_Section.IN1
Y_GT => Y_Clk_en.OUTPUTSELECT
Y_GT => Y_UPorDOWN.IN0
Y_GT => Y_UPorDOWN$latch.DATAIN
Y_LT => Y_Clk_en.DATAA
Y_LT => Y_UPorDOWN.IN1
extenderOut => Transition_Section.IN1
extenderOut => Selector4.IN3
extenderOut => Transition_Section.IN1
extenderOut => Transition_Section.IN1
extenderOut => Transition_Section.IN1
extenderOut => Selector1.IN0
X_MOTION => Transition_Section.IN1
X_MOTION => Transition_Section.IN1
X_MOTION => Transition_Section.IN0
Y_MOTION => Transition_Section.IN1
Y_MOTION => Transition_Section.IN1
Y_MOTION => Transition_Section.IN1
X_Clk_en <= X_Clk_en$latch.DB_MAX_OUTPUT_PORT_TYPE
X_UPorDOWN <= X_UPorDOWN$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_Clk_en <= Y_Clk_en$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_UPorDOWN <= Y_UPorDOWN$latch.DB_MAX_OUTPUT_PORT_TYPE
ExtenderEnable <= ExtenderEnable$latch.DB_MAX_OUTPUT_PORT_TYPE
isError <= isError$latch.DB_MAX_OUTPUT_PORT_TYPE


